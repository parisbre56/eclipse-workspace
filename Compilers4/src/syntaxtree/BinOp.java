//
// Generated by JTB 1.3.2 DIT@UoA patched
//

package syntaxtree;

/**
 * Grammar production:
 * <PRE>
 * operator -> Operator()
 * exp -> Exp()
 * exp1 -> Exp()
 * </PRE>
 */
public class BinOp implements Node {
   private Node parent;
   public Operator operator;
   public Exp exp;
   public Exp exp1;

   public BinOp(Operator n0, Exp n1, Exp n2) {
      operator = n0;
      if ( operator != null ) operator.setParent(this);
      exp = n1;
      if ( exp != null ) exp.setParent(this);
      exp1 = n2;
      if ( exp1 != null ) exp1.setParent(this);
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
   public void setParent(Node n) { parent = n; }
   public Node getParent()       { return parent; }
}

